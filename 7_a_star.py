def return_array_sorted_by_cost(node, graph):
    neighbours = graph[node]
    cost = dict()
    for neighbour in neighbours:
        cost[neighbour[0]] = neighbour[1] + neighbour[2]
    cost = dict(sorted(cost.items(), key=lambda item: item[1]))
    return cost


def a_star_search(currNode, finishNode, graph, visited, best_cost):
    if currNode == finishNode:
        print("Solution found!")
        visited.append(currNode)
        print(visited)
        print("Best costs:", best_cost)
        return True
    if currNode in visited:
        return False

    visited.append(currNode)
    currNeighbours = return_array_sorted_by_cost(currNode, graph)
    for node in currNeighbours:
        if node not in best_cost:
            best_cost[node] = currNeighbours[node]
        if currNeighbours[node] <= best_cost[node] and node not in visited:
            result = a_star_search(node, finishNode, graph, visited, best_cost)
            if result == True:
                return True


graph = {
    "Брест": [("Вильнюс", 531, 990), ("Витебск", 638, 970), ("Калининград", 699, 1165)],
    "Вильнюс": [("Брест", 531, 803), ("Калининград", 333, 1165), ("Каунас", 102, 1051), ("Киев", 734, 439), ("Даугавпилс", 211, 1084)],
    "Витебск": [("Брест", 638, 803), ("Вильнюс", 360, 990), ("Воронеж", 869, 843), ("Волгоград", 1455, 1062), ("Ниж.Новгород", 911, 1423), ("С.Петербург", 602, 1495), ("Орел", 522, 815)],
    "Воронеж":  [("Витебск", 869, 970), ("Волгоград", 581, 1062), ("Ярославль", 739, 1384)],
    "Волгоград":  [("Воронеж", 581, 1062), ("Витебск", 1455, 970), ("Житомир", 1493, 446)],
    "Даугавпилс": [("Вильнюс", 211, 990)],
    "Донецк": [("Житомир", 863, 446), ("Кишинев", 812, 154), ("Москва", 1084, 1136), ("Орел", 709, 815)],
    "Калининград":  [("Брест", 699, 803), ("Вильнюс", 333, 990), ("С.Петербург", 739, 1495)],
    "Каунас":  [("Вильнюс", 102, 1051), ("Рига", 267, 1249)],
    "Казань": [("Москва", 815, 1136), ("Уфа", 525, 1988)],
    "Киев":  [("Вильнюс", 734, 990), ("Житомир", 131, 446), ("Кишинев", 467, 154), ("Одесса", 487, 0), ("Харьков", 471, 561)],
    "Житомир":  [("Киев", 131, 446), ("Донецк", 863, 560), ("Волгоград", 1493, 1062)],
    "Кишинев":  [("Киев", 467, 154), ("Донецк", 812, 560)],
    "Ниж.Новгород": [("Витебск", 911, 1423), ("Москва", 411, 1136)],
    "С.Петербург":  [("Витебск", 602, 970), ("Калининград", 739, 1165), ("Рига", 641, 1249), ("Москва", 664, 1136), ("Мурманск", 1412, 2504)],
    "Самара": [("Уфа", 461, 1988)],
    "Симферополь": [("Харьков", 639, 561)],
    "Минск": [("Москва", 690, 1136), ("Мурманск",2238, 2504), ("Ярославль", 940, 1384)],
    "Москва":  [("Казань", 815, 1640), ("Ниж.Новгород", 411, 1423), ("Минск", 690, 855), ("Донецк", 1084, 560), ("С.Петербург", 664, 1495), ("Орел", 368, 815)],
    "Мурманск":  [("С.Петербург", 1412, 1495), ("Минск", 2238, 855)],
    "Орел":  [("Витебск", 522, 970), ("Донецк", 709, 560), ("Москва", 368, 1136)],
    "Одесса":  [("Киев", 487, 439)],
    "Рига":  [("С.Петербург", 641, 1495), ("Каунас", 267, 1051), ("Таллин", 308, 1493)],
    "Таллин":  [("Рига", 308, 1249)],
    "Уфа": [("Казань", 525, 1640), ("Самара", 461, 1574)],
    "Харьков":  [("Киев", 471, 439), ("Симферополь", 639, 313)],
    "Ярославль":  [("Воронеж", 739, 843), ("Минск", 940, 855)],
}

start = "Рига"
finish = "Одесса"
visited = []
best_cost = dict()

a_star_search(start, finish, graph, visited, best_cost)
